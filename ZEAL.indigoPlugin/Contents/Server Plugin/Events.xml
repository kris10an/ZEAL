<?xml version="1.0"?>
<Events>
    <SupportURL>https://github.com/kris10an/ZEAL/wiki</SupportURL>

    <!-- ALARM/NOTIFICATION V2-V8 -->

    <Event id="x71received">
        <Name>Received Z-Wave Alarm/Notification v2-v8</Name>
        <ConfigUI>
        	<Field type="label" id="intro">
        		<Label>
Use this dialog to add, edit or delete  filters for certain alarms/notifications. You may for example choose to INCLUDE all alarms then EXCLUDE only certain alarms, to avoid having to create many triggers.
				</Label>
        	</Field>
        	<Field id="separator1" type="separator"/>
        	<Field type="menu" id="triggerFor" defaultValue="all">
        		<Label>Trigger for:</Label>
        		<List>
        			<Option value="selected">Selected devices</Option>
        			<Option value="all">All Z-wave devices</Option>
        		</List>
        	</Field>
        	<Field type="list" id="devices" rows="6" visibleBindingId="triggerFor" visibleBindingValue="selected" alwaysUseInDialogHeightCalc="true">
        		<Label>Select devices:</Label>
        		<List class="indigo.devices" filter="indigo.zwave"/>
        	</Field>
        	
        	<!-- INCLUSION FILTERS -->
        	
        	<Field type="label" id="introInclude" fontColor="blue">
        		<Label>
Inclusion filters</Label>
        	</Field>
        	<Field id="separator2" type="separator"/>
        	<Field type="menu" id="selectedIncludeFilter" default="_blank">
        		<Label>Select 
Filter:</Label>
        		<List class="self" filter="includeFilters" method="getUIList" dynamicReload="true"/>
				<CallbackMethod>x71receivedIncludeFilterChangedFilterSelection</CallbackMethod>
        	</Field>
        	<Field type="textfield" id="includeFilterName">
        		<Label>Filter Name:</Label>
        	</Field>
        	<Field type="menu" id="includeFilterType" default="all">
        		<Label>Alarm/
notification types:</Label>
        		<List class="self" filter="alarmTypesInclude" method="getUIList" dynamicReload="true"/>
				<CallbackMethod>x71receivedIncludeFilterChangedTypeSelection</CallbackMethod>
        	</Field>
        	<Field type="list" id="includeFilterEvents" default="all" rows="6">
        		<Label>Events:</Label>
        		<List class="self" filter="eventsInclude" method="getUIList" dynamicReload="true"/>
				<!--<CallbackMethod>selectedTriggerFilterChangedEventSelection</CallbackMethod>-->
        	</Field>
        	<Field type="textfield" id="includeFilterStatus" default="" readonly="true" visibleBindingId="showIncludeFilterStatus" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
        		<Label>Save/edit status:

</Label>
			</Field>
        	<Field type="checkbox" id="showIncludeFilterStatus" default="False" hidden="true">
        	</Field>
        	<Field id="saveIncludeFilter" type="button" tooltip="Save the filter">
				<Title>Save</Title>
				<CallbackMethod>x71receivedSelectedIncludeFilterSave</CallbackMethod>
			</Field>
        	<Field id="deleteIncludeFilter" type="button" tooltip="Delete the selected filter">
				<Title>Delete</Title>
				<CallbackMethod>x71receivedSelectedIncludeFilterDelete</CallbackMethod>
			</Field>
			
			<!-- EXCLUSION FILTERS -->
			
        	<Field type="label" id="introExclude" fontColor="blue">
        		<Label>
Exclusion filters</Label>
        	</Field>
        	<Field id="separator3" type="separator"/>
        	<Field type="menu" id="selectedExcludeFilter" default="_blank">
        		<Label>Select 
Filter:</Label>
        		<List class="self" filter="excludeFilters" method="getUIList" dynamicReload="true"/>
				<CallbackMethod>x71receivedExcludeFilterChangedFilterSelection</CallbackMethod>
        	</Field>
        	<Field type="textfield" id="excludeFilterName">
        		<Label>Filter Name:</Label>
        	</Field>
        	<Field type="menu" id="excludeFilterType" default="all">
        		<Label>Alarm/
notification types:</Label>
        		<List class="self" filter="alarmTypesExclude" method="getUIList" dynamicReload="true"/>
				<CallbackMethod>x71receivedExcludeFilterChangedTypeSelection</CallbackMethod>
        	</Field>
        	<Field type="list" id="excludeFilterEvents" default="all" rows="6">
        		<Label>Events:</Label>
        		<List class="self" filter="eventsExclude" method="getUIList" dynamicReload="true"/>
				<!--<CallbackMethod>selectedTriggerFilterChangedEventSelection</CallbackMethod>-->
        	</Field>
        	<Field type="textfield" id="excludeFilterStatus" default="" readonly="true" visibleBindingId="showExcludeFilterStatus" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
        		<Label>Save/edit status:

</Label>
			</Field>
        	<Field type="checkbox" id="showExcludeFilterStatus" default="False" hidden="true">
        	</Field>
        	<Field id="saveExcludeFilter" type="button" tooltip="Save the filter">
				<Title>Save</Title>
				<CallbackMethod>x71receivedSelectedExcludeFilterSave</CallbackMethod>
			</Field>
        	<Field id="deleteExcludeFilter" type="button" tooltip="Delete the selected filter">
				<Title>Delete</Title>
				<CallbackMethod>x71receivedSelectedExcludeFilterDelete</CallbackMethod>
			</Field>
        </ConfigUI>
    </Event>
    
    <!-- BATTERY NOTIFICATION -->
    
    <Event id="x80received">
        <Name>Received Battery report</Name>
        <ConfigUI>
        	<Field type="menu" id="triggerFor" defaultValue="all">
        		<Label>Trigger for:</Label>
        		<List>
        			<Option value="selected">Selected devices</Option>
        			<Option value="all">All Z-wave devices</Option>
        		</List>
        	</Field>
        	<Field type="list" id="devices" rows="6" visibleBindingId="triggerFor" visibleBindingValue="selected" alwaysUseInDialogHeightCalc="true">
        		<Label>Select devices:</Label>
        		<List class="indigo.devices" filter="indigo.zwave"/>
        	</Field>
        	
        	<Field type="label" id="introInclude" fontColor="blue">
        		<Label>
Trigger on</Label>
        	</Field>
        	<Field id="separator1" type="separator"/>
        	<Field type="checkbox" id="triggerLowBatteryReport" default="true">
        		<Label>Low battery report:</Label>
        	</Field>
			<Field type="menu" id="lowBatteryResetOn" defaultValue="levelAbove" visibleBindingId="triggerLowBatteryReport" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Reset:</Label>
				<List>
					<Option value="levelAbove">Battery level above value</Option>
					<Option value="onTime">On time</Option>
					<Option value="manual">Manual reset</Option>
					<Option value="always">Always trigger</Option>
				</List>
			</Field>
			<Field type="textfield" id="lowBatteryResetLevel" defaultValue="80"  visibleBindingId="lowBatteryResetOn" visibleBindingValue="levelAbove" alwaysUseInDialogHeightCalc="true">
				<Label>Level to reset on (%):</Label>
			</Field>
			<Field type="textfield" id="lowBatteryResetTime" defaultValue="24"  visibleBindingId="lowBatteryResetOn" visibleBindingValue="onTime" alwaysUseInDialogHeightCalc="true">
				<Label>Hours to reset after:</Label>
			</Field>
			<Field type="label" id="lowBatteryLabel" alignWithControl="true" visibleBindingId="lowBatteryResetOn" visibleBindingValue="levelAbove,onTime,manual" alwaysUseInDialogHeightCalc="true" fontSize="small" fontColor="darkgray">
				<Label>To avoid having multiple triggers if the device reports low battery multiple times, you can choose how to reset the trigger for each device, meaning it will trigger again. Can be manually reset via plugin menu</Label>
			</Field>
        	<Field type="label" id="emptylabel1">
        		<Label>
        		</Label>
        	</Field>
        	<Field type="label" id="emptylabel2">
        		<Label>
        		</Label>
        	</Field>
        	<Field type="checkbox" id="triggerBatteryLevel" default="true">
        		<Label>Battery level:</Label>
			</Field>
			<Field type="textfield" id="batteryLevel" defaultValue="10" visibleBindingId="triggerBatteryLevel" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Trigger level (0-100%):</Label>
			</Field>
			<Field type="menu" id="batteryLevelResetOn" defaultValue="levelAbove" visibleBindingId="triggerBatteryLevel" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Reset:</Label>
				<List>
					<Option value="levelAbove">Battery level above value</Option>
					<Option value="onTime">On time</Option>
					<Option value="manual">Manual reset</Option>
					<Option value="always">Always trigger</Option>
				</List>
			</Field>
			<Field type="textfield" id="batteryLevelResetLevel" defaultValue="80"  visibleBindingId="batteryLevelResetOn" visibleBindingValue="levelAbove" alwaysUseInDialogHeightCalc="true">
				<Label>Level to reset on (%):</Label>
			</Field>
			<Field type="textfield" id="batteryLevelResetTime" defaultValue="24"  visibleBindingId="batteryLevelResetOn" visibleBindingValue="onTime" alwaysUseInDialogHeightCalc="true">
				<Label>Hours to reset after:</Label>
			</Field>
			<Field type="label" id="batteryLevelLabel" alignWithControl="true" visibleBindingId="batteryLevelResetOn" visibleBindingValue="levelAbove,onTime,manual" alwaysUseInDialogHeightCalc="true" fontSize="small" fontColor="darkgray">
				<Label>To avoid having triggers every time the device reports battery level, you can choose how to reset the trigger for each device, meaning it will trigger again. Can be manually reset via plugin menu</Label>
			</Field>
        </ConfigUI>
    </Event>

</Events>